@page "/"
@using LibrarySystem.Models
@inject NavigationManager navigationManager
@inject LibrarySystem.Models.UserService userService

<style>
    /* Set the body background to skyblue */
    body {
        background-color: lightgray;
    }

    /* Style for the login container */
    .login-container {
        /* Set the background color to white */
        background-color: white;
        /* Set maximum width */
        max-width: 500px;
        /* Center the container horizontally */
        margin: auto;
        /* Add padding */
        padding: 15px;
        /* Add box shadow */
        box-shadow: 0px 0px 10px rgba(0,0,0,0.1);
    }
</style>

<h3>Login</h3>
<div class="login-container">
    <!-- Form for user login -->
    <EditForm Model="@loginModel" OnValidSubmit="login">
        <DataAnnotationsValidator />
        <!-- Email input field -->
        <div class="form-group">
            <label>Email address</label>
            <input type="email" @bind-value="loginModel.UserName" class="form-control" placeholder="Enter email">
            <ValidationMessage For="@(()=> loginModel.UserName)" />
        </div>
        <!-- Password input field -->
        <div class="mt-2 form-group">
            <label>Password</label>
            <input type="password" @bind-value="loginModel.Password" class="form-control" placeholder="Password">
            <ValidationMessage For="@(()=> loginModel.Password)" />
        </div>

        <!-- Link to registration page -->
        <div class="mt-2 text-end">
            <NavLink class="nav-link" href="registration">
                <span>Click here to create new account</span>
            </NavLink>
        </div>

        <!-- Sign in button -->
        <div class="text-center mt-2">
            <button class="btn btn-primary" type="submit">Sign In</button>
        </div>
    </EditForm>
</div>

@code {
    LoginModel loginModel = new(); // Initialize LoginModel object

    bool isAuthenticated = false; // Flag to track authentication status

    // Method to handle user login
    public void login()
    {
        // Iterate through the list of users
        foreach (Users user in userService.UserList)
        {
            // Check if user credentials match
            if (user.Email == loginModel.UserName && user.Password == loginModel.Password)
            {
                isAuthenticated = true; // Set authentication status to true
                navigationManager.NavigateTo("/dashboard"); // Navigate to dashboard page
                break; // Exit the loop
            }
        }

        // If user is not authenticated, throw an exception
        if (!isAuthenticated)
        {
            throw new Exception("The user doesn't exist or the email/password is incorrect");
        }
    }
}
